@page "/school/{school}"
@inject HttpClient httpClient

<h3>Students in @school</h3>

@if (students == null)
{
    <div class="alert alert-info">Loading students...</div>
}
else if (!students.Any())
{
    <div class="alert alert-warning">No students found.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Student ID</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in students)
                {
                    <tr>
                        <td>@student.StudentId</td>
                        <td>@student.FirstName</td>
                        <td>@student.LastName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    [Parameter] public string school { get; set; } = string.Empty;

    private List<Student>? students;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(school))
        {
            Console.Error.WriteLine("Error: School parameter is missing.");
            students = new List<Student>();
            return;
        }

        try
        {
            students = await httpClient.GetFromJsonAsync<List<Student>>(
            $"{Constants.BASE_URL}api/school/{Uri.EscapeDataString(school)}"
            );
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading students: {ex.Message}");
            students = new List<Student>(); // Prevent null reference issues
        }
    }

    private class Student
    {
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public int StudentId { get; set; }
    }
}
