@page "/schools"
@inject HttpClient httpClient
@inject NavigationManager Navigation

<h3 class="mt-4 mb-3">Schools</h3>

@if (schoolCounts == null)
{
    <div class="alert alert-info">Loading schools...</div>
}
else if (!schoolCounts.Any())
{
    <div class="alert alert-warning">No schools found.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered table-striped">
            <thead class="table-dark">
                <tr>
                    <th>School Name</th>
                    <th>Student Count</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var schoolCount in schoolCounts)
                {
                    <tr>
                        <td>@schoolCount.School</td>
                        <td>@schoolCount.Count</td>
                        <td>
                            <button class="btn btn-primary btn-sm"
                                @onclick="@(() => Navigation.NavigateTo($"/school/{Uri.EscapeDataString(schoolCount.School)}"))">
                                View Students
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<SchoolCount>? schoolCounts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            schoolCounts = await
            httpClient.GetFromJsonAsync<List<SchoolCount>>($"{Constants.BASE_URL}api/students/count-by-school");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading schools: {ex.Message}");
            schoolCounts = new List<SchoolCount>(); // Prevent null reference issues
        }
    }

    private class SchoolCount
    {
        public string School { get; set; } = string.Empty;
        public int Count { get; set; }
    }
}
